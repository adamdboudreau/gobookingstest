{{template "base" .}}

{{define "below-nav-content"}}
    <h1>Book Room</h1>
{{end}}

{{define "content"}}
    
    <h1>Hello, Major!</h1>

    <div class="container">

        <div class="row">
            {{$res := index .Data "reservation"}}

            <form action="/book_room" method="post" novalidate class="needs -validation">
              <input type="hidden" name="csrf_token" value={{.CSRFToken}}>

                <div class=" form-row row">
                  <label for="firstName" class="form-label">First Name</label>

                  {{with .Form.Errors.Get "firstName"}}
                    <label class="text-danger">{{.}}</label>
                  {{end}}

                  <input type="text" 
                      class="form-control {{with .Form.Errors.Get "firstName"}} is-invalid {{end}}" 
                      id="firstName" name="firstName" aria-describedby="firstName" 
                      value="{{$res.FirstName}}"  required>
                  
                  <div class="valid-feedback">
                    Looks good!
                  </div>
                  <div id="validationServerStartDate" class="invalid-feedback">
                    Please enter name
                  </div>
                </div>

                <div class=" form-row row">
                  <label for="lastName" class="form-label">Last Name</label>
                  {{with .Form.Errors.Get "lastName"}}
                    <label class="text-danger">{{.}}</label>
                  {{end}}
                  <input type="text" class="form-control {{with .Form.Errors.Get "lastName"}} is-invalid {{end}}" id="lastName" name="lastName" aria-describedby="lastName" 
                  value="{{$res.LastName}}" required>
                  
                  <div class="valid-feedback">
                    Looks good!
                  </div>
                  <div id="validationServerStartDate" class="invalid-feedback">
                    Please enter name
                  </div>
                </div>

                <div class=" form-row row">
                    <label for="phone" class="form-label">Phone Number</label>
                    {{with .Form.Errors.Get "phone"}}
                      <label class="text-danger">{{.}}</label>
                    {{end}}
                    <input type="text" class="form-control {{with .Form.Errors.Get "phone"}} is-invalid {{end}}" id="phone" name="phone" aria-describedby="phone"
                    value="{{$res.Phone}}" required>
                    
                    <div class="valid-feedback">
                      Looks good!
                    </div>
                    <div id="validationServerStartDate" class="invalid-feedback">
                      Please enter phone number
                    </div>
                </div>

                <div class=" form-row row">
                    <label for="email" class="form-label">Email Address</label>
                    {{with .Form.Errors.Get "email"}}
                      <label class="text-danger">{{.}}</label>
                    {{end}}
                    <input type="text" class="form-control {{with .Form.Errors.Get "email"}} is-invalid {{end}}" id="email" name="email" aria-describedby="email"
                    value="{{$res.Email}}" required>
                    
                    <div class="valid-feedback">
                        Looks good!
                    </div>
                    <div id="validationServerStartDate" class="invalid-feedback">
                        Please enter email
                    </div>
                </div>

                <hr>

                <div class=" form-row row">
                    <button type="submit" class="btn btn-primary">Submit</button>
                </div>
                
            </form>
        </div>
    </div>
{{end}}


{{define "js"}}
<script>
// Example starter JavaScript for disabling form submissions if there are invalid fields
(() => {
    'use strict'

    // Fetch all the forms we want to apply custom Bootstrap validation styles to
    const forms = document.querySelectorAll('.needs-validation')

    // Loop over them and prevent submission
    Array.from(forms).forEach(form => {
        form.addEventListener('submit', event => {
        if (!form.checkValidity()) {
            event.preventDefault()
            event.stopPropagation()
        }

        form.classList.add('was-validated')
        }, false)
    })
})()

</script>
{{end}}
